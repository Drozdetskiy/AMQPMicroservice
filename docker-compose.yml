version: '3'

services:
  db:
    image: postgres

  amqpservice:
    build:
      context: amqpservice
      dockerfile: Dockerfile
    command: python amqpservice/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/amqpservice_code
      - .:/amqpservice
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq

  rating_consumer_service:
    build:
      context: amqpservice
      dockerfile: Dockerfile
    command: >
          /bin/bash -c "
          sleep 15;
          python manage.py runconsumer;
          "
    depends_on:
      - db
#      - rabbitmq
#      - producer_mock

  producer_mock:
    build:
      context: producer
      dockerfile: Dockerfile
    command: >
          /bin/bash -c "
          sleep 15;
          python producer/producer_mock.py;
          "
    volumes:
      - .:/producer_code
      - .:/producer
    expose:
      - "5672"
      - "15672"
    depends_on:
      - rabbitmq
      - redis
    links:
      - rabbitmq

  redis:
    image: redis
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - .:/data

  rabbitmq:
    image: "rabbitmq:3-management"
    build:
      context: rabbitmq
      dockerfile: Dockerfile
    hostname: "rabbit"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    volumes:
      - .:/rabbitmq-isolated.conf
